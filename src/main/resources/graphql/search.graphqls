extend type Query {
    search(input: SearchInput! = {}): SearchResult!
}

input SearchInput {
    phrase: String
    currentPage: Int = 1
    pageSize: Int = 6
    sort: [RecipeSort] = [{attribute: "name"}]
    filters: [FilterType]
}

type SearchResult {
    currentPage: Int!
    numberOfPages: Int!
    opinion: String
    recipes: [RecipeSummarization]!
}

input RecipeSort {
    attribute: String!
    direction: SortDirection! = ASC
}

enum SortDirection {
    ASC
    DESC
}

input FilterType {
    attribute: String!
    equals: String
    from: Int
    to: Int
    in: [String]
    hasOnly: [String]
}