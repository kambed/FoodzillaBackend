extend type Query {
    search(input: SearchInput): SearchResult!
}

input SearchInput {
    phrase: String
    currentPage: Int = 1
    pageSize: Int = 5
    sort: RecipeSort = RATING
    sortDirection: SortDirection = ASC
    filter: RecipeFilter
}

type SearchResult {
    currentPage: Int!
    numberOfPages: Int!
    recipes: [Recipe]!
}

enum RecipeSort {
    RATING
    TITLE
}

enum SortDirection {
    ASC
    DESC
}

input RecipeFilter {
    timeOfPreparation: [FilterIntType]
    tags: [FilterStringType]
    ingredients: [FilterStringType]
    numberOfSteps: [FilterIntType]
    numberOfIngredients: [FilterIntType]
    calories: [FilterIntType]
    totalFat: [FilterIntType]
    sugar: [FilterIntType]
    sodium: [FilterIntType]
    protein: [FilterIntType]
    saturatedFat: [FilterIntType]
    carbohydrates: [FilterIntType]
    reviews: [FilterIntType]
}

input FilterStringType {
    equals: String
    has: [String]
}

input FilterIntType {
    equals: Int
    from: Int
    to: Int
    has: [Int]
}